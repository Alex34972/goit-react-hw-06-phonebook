{"version":3,"sources":["components/contactList/ContactList.module.css","components/filter/Filter.module.css","redux/actions.js","redux/reduser.js","redux/store.js","components/contactForm/ContactForm.js","components/filter/Filter.js","components/contactList/ContactList.js","Phonebook.js","App.js","reportWebVitals.js","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","payload","name","number","id","shortid","deleteContact","filterContacts","items","createReducer","state","action","filter","element","_","combineReducers","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","contactsReduser","store","configureStore","reducer","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ContactForm","useState","setName","setNumber","nameInputId","generate","numberInputId","useSelector","dispatch","useDispatch","handleChange","event","target","value","console","error","reset","className","s","forma","title","inputForm","type","pattern","required","onChange","formBtn","onClick","find","item","alert","actions","Filter","filterInput","ContactList","normalizedFilter","toLowerCase","contact","includes","map","length","contactBtn","Phonebook","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6a7ff520.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__3FFCj\",\"contactBtn\":\"ContactList_contactBtn__ZGl4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3XI9T\",\"filterInput\":\"Filter_filterInput__3IGSy\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction(\n  'addContact',\n\n  ({ name, number }) => {\n    return {\n      payload: {\n        name,\n        number,\n        id: shortid(),\n      },\n    };\n  },\n);\nconst deleteContact = createAction('deleteContact');\n\nconst filterContacts = createAction('filterContacts');\n\nexport { addContact, deleteContact, filterContacts };\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, filterContacts } from './actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, action) => [...state, action.payload],\n  [deleteContact]: (state, action) =>\n    state.filter(element => element.id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [filterContacts]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReduser from './reduser';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\nconst persistedReducer = persistReducer(persistConfig, contactsReduser);\nconst store = configureStore({\n  reducer: {\n    contacts: persistedReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV !== 'production',\n});\nconst persistor = persistStore(store);\nexport { store, persistor };\n","import shortid from 'shortid';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        console.error();\n        return;\n    }\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleAppend = () => {\n    if (contacts.find(item => item.name === name)) {\n      alert(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n    dispatch(actions.addContact({ name, number }));\n    reset();\n  };\n\n  return (\n    <form className={s.forma}>\n      <p className={s.title}>Name</p>\n      <input\n        className={s.inputForm}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        id={nameInputId}\n        onChange={handleChange}\n      />\n      <p className={s.title}>Number</p>\n      <input\n        className={s.inputForm}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        id={numberInputId}\n        onChange={handleChange}\n      />\n      <button className={s.formBtn} type=\"button\" onClick={handleAppend}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const onFilter = event =>\n    dispatch(actions.filterContacts(event.target.value));\n\n  return (\n    <label className={s.filter}>\n      Find contacts by name\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={onFilter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/actions';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const deletContact = contactId => {\n    dispatch(actions.deleteContact(contactId));\n  };\n  const getFilterContacts = state => {\n    const { filter, items } = state.contacts;\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const contacts = useSelector(getFilterContacts);\n  return (\n    <ul className={s.ContactList}>\n      {contacts.map(\n        ({ id, name, number }) =>\n          name.length > 0 &&\n          number.length > 0 && (\n            <li className={s.contact} key={id}>\n              {name}: {number}\n              <button\n                className={s.contactBtn}\n                type=\"button\"\n                onClick={() => deletContact(id)}\n              >\n                Delete\n              </button>\n            </li>\n          ),\n      )}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default ContactList;\n","import ContactForm from './components/contactForm';\nimport Filter from './components/filter';\nimport ContactList from './components/contactList';\n\nexport default function Phonebook() {\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import Phonebook from './Phonebook';\n\nfunction App() {\n  return (\n    <>\n      <Phonebook />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forma\":\"ContactForm_forma__2dwhp\",\"title\":\"ContactForm_title__PlBG0\",\"inputForm\":\"ContactForm_inputForm__3dkcK\",\"formBtn\":\"ContactForm_formBtn__26wL6\"};"],"sourceRoot":""}